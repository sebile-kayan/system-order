/**
 * PAYMENT BUTTON COMPONENT - Floating √ñdeme Butonu
 * 
 * Bu bile≈üen saƒü alt k√∂≈üede sabit duran toplam tutar g√∂stergesidir.
 * 
 * ƒ∞√áERƒ∞K:
 * - üí≥ Para ikonu
 * - Toplam tutar bilgisi
 * - Responsive metin (mobilde sadece tutar, desktop'ta "Toplam: ‚Ç∫X")
 * 
 * √ñZELLƒ∞KLER:
 * - Her zaman g√∂r√ºn√ºr (sepet bo≈ü olsa bile)
 * - Sipari≈ü verildikten sonra da tutarƒ± g√∂sterir
 * - Floating (sabit) pozisyon
 * - Responsive tasarƒ±m
 * - Ye≈üil renk temasƒ±
 * - Tƒ±klanamaz (sadece bilgi ama√ßlƒ±)
 * 
 * TUTAR HESAPLAMA:
 * - Sipari≈ü verilmi≈üse: Kaydedilen tutarƒ± g√∂sterir (orderTotal)
 * - Sipari≈ü verilmemi≈üse: Sepet tutarƒ±nƒ± g√∂sterir (calculateTotal)
 * 
 * KULLANICI DENEYƒ∞Mƒ∞:
 * 1. M√º≈üteri her zaman toplam tutarƒ± g√∂rebilir
 * 2. Sepet durumu deƒüi≈üse bile tutar g√∂r√ºn√ºr kalƒ±r
 * 3. Sipari≈ü verildikten sonra da tutar bilgisi korunur
 */
import React from 'react';
import { useNavigate } from 'react-router-dom';
import { useCart } from '../context/CartContext';

const PaymentButton = () => {
  const { calculateTotal, hasOrdered, orderTotal, cart, isPaid } = useCart();
  const navigate = useNavigate();
  
  // √ñdeme mantƒ±ƒüƒ±:
  // 1. Sipari≈ü verilmi≈ü ama √∂deme alƒ±nmamƒ±≈üsa: Sadece sipari≈ü verilen tutar √∂denir
  // 2. Hi√ß sipari≈ü verilmemi≈üse veya √∂deme alƒ±nmƒ±≈üsa: sepet tutarƒ±
  const currentCartTotal = calculateTotal();
  let paymentTotal = 0; // √ñdenecek tutar
  let hasNewItems = false; // Yeni sepette √ºr√ºn var mƒ±?
  
  if (hasOrdered && !isPaid) {
    paymentTotal = orderTotal; // Sadece sipari≈ü verilen tutar √∂denir
    hasNewItems = currentCartTotal > 0; // Yeni sepette √ºr√ºn varsa
  } else {
    paymentTotal = currentCartTotal; // Normal sepet tutarƒ±
  }

  // √ñdeme sayfasƒ±na y√∂nlendir
  const handlePaymentClick = () => {
    if (paymentTotal > 0) {
      navigate('/payment');
    }
  };

  // Buton her zaman g√∂r√ºn√ºr olacak, sepet bo≈ü olsa bile
  return (
    <div 
      className={`fixed bottom-4 right-4 z-40 transition-all duration-300 ${
        paymentTotal > 0 ? 'cursor-pointer hover:scale-105' : 'cursor-not-allowed'
      }`}
      onClick={paymentTotal > 0 ? handlePaymentClick : undefined}
      title={paymentTotal > 0 ? '√ñdeme yapmak i√ßin tƒ±klayƒ±n' : 'Sepetiniz bo≈ü'}
    >
      <div className={`relative bg-white rounded-xl shadow-lg border transition-all duration-300 ${
        paymentTotal > 0 
          ? 'border-green-400 hover:border-green-500 hover:shadow-xl' 
          : 'border-gray-200'
      }`}>
        {/* Ana √∂deme kartƒ± */}
        <div className={`px-4 py-3 rounded-xl transition-all duration-300 ${
          paymentTotal > 0 ? 'bg-gradient-to-r from-green-500 to-green-600' : 'bg-gradient-to-r from-gray-400 to-gray-500'
        }`}>
          <div className="flex items-center gap-2">
            {/* Kredi kartƒ± ikonu */}
            <div className="bg-white/20 p-1.5 rounded-lg">
              <svg className="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4zM18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z"/>
              </svg>
            </div>
            
            {/* Tutar bilgisi */}
            <div className="text-white">
              <div className="font-bold text-base">
                ‚Ç∫{paymentTotal.toFixed(0)}
              </div>
              <div className="text-xs opacity-90">
                {hasOrdered ? '√ñdenecek' : 'Sepet'}
              </div>
            </div>
          </div>
        </div>
        
        {/* Yeni sepet bilgisi (varsa) */}
        {hasNewItems && (
          <div className="bg-orange-50 border-t border-orange-100 px-4 py-2 rounded-b-xl">
            <div className="flex items-center justify-between">
              <div className="text-orange-700">
                <div className="text-xs font-medium">Yeni: ‚Ç∫{currentCartTotal.toFixed(0)}</div>
              </div>
              <div className="text-orange-500">
                <svg className="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clipRule="evenodd"/>
                </svg>
              </div>
            </div>
          </div>
        )}
        
        {/* Pulse efekti (sadece √∂deme varsa) */}
        {paymentTotal > 0 && (
          <div className="absolute -top-1 -right-1 w-2.5 h-2.5 bg-red-500 rounded-full animate-pulse"></div>
        )}
      </div>
    </div>
  );
};

export default PaymentButton;
